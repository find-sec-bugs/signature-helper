/*

 Copyright (c) 2014 IBM Corporation and others.
 All rights reserved. This program and the accompanying materials are made 
 available under the terms of the Eclipse Public License v1.0 
 (http://www.eclipse.org/legal/epl-v10.html), and the Eclipse Distribution 
 License v1.0 (http://www.eclipse.org/org/documents/edl-v10.html). 

 Contributors: IBM Corporation - initial API and implementation
*/
define("orion/editor/stylers/text_x-csrc/syntax",["orion/editor/stylers/lib/syntax"],function(d){var b="auto break case char const continue default double do else enum extern float for goto if inline int long register return short signed sizeof static struct switch typedef union unsigned void volatile while _Bool _Complex _Imaginary".split(" "),c="define elif else endif error ifdef ifndef if include line pragma undef".split(" "),a=[];a.push.apply(a,d.grammars);a.push({id:"orion.c",contentTypes:["text/x-csrc",
"text/x-c"],patterns:[{include:"orion.lib#string_doubleQuote"},{include:"orion.lib#string_singleQuote"},{include:"orion.c-like#comment_singleLine"},{include:"orion.lib#doc_block"},{include:"orion.c-like#comment_block"},{include:"#directive"},{include:"orion.lib#brace_open"},{include:"orion.lib#brace_close"},{include:"orion.lib#bracket_open"},{include:"orion.lib#bracket_close"},{include:"orion.lib#parenthesis_open"},{include:"orion.lib#parenthesis_close"},{include:"orion.lib#number_decimal"},{include:"orion.lib#number_hex"},
{match:"\\b(?:"+b.join("|")+")\\b",name:"keyword.operator.c"}],repository:{directive:{match:"(#\\s*(?:"+c.join("|")+"))\\b",name:"keyword.operator.directive.c"}}});return{id:a[a.length-1].id,grammars:a,keywords:b.concat(c)}});